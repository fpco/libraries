name:                mesosync
version:             0.0.0
synopsis:            A variation of lifted-async that has some synchronicity guarantees.

description:         In the async package, the cancel function is
                     asynchronous, which is not always the intended behaviour. In
                     particular, there is no guarantee that after race returns, both
                     threads have temrinated.  This package uses a version of cancel that
                     returns after the canceled thread has actually terminated.

homepage:            https://github.com/fpco/libraries
license:             AllRightsReserved
license-file:        LICENSE
author:              Philipp Kant
maintainer:          philipp@fpcomplete.com
category:            Concurrency
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:   Control.Concurrent.Mesosync
                   , Control.Concurrent.Mesosync.Lifted.Safe
  other-modules:     Control.Concurrent.Mesosync.Lifted
  hs-source-dirs:    src
  build-depends:     base >= 4.7
                   , lifted-async
                   , lifted-base
                   , transformers-base
                   , monad-control >= 1.0.0.0
                   , async
                   , stm
                   , constraints
  ghc-options: -Wall -Werror


test-suite test-mesosync
    default-language: Haskell2010
    type:       exitcode-stdio-1.0
    hs-source-dirs: test
    main-is:    test-mesosync.hs
    build-depends: base >= 4.3 && < 4.10,
                   mesosync,
                   test-framework,
                   test-framework-hunit,
                   HUnit
