name:                work-queue
version:             0.1.0.0
synopsis:            Local and distributed work queue implementation
description:         See README.md
homepage:            https://github.com/fpco/libraries
license:             AllRightsReserved
license-file:        LICENSE
author:              Michael Snoyman
maintainer:          michael@fpcomplete.com
copyright:           FP Complete
category:            Concurrency
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >= 1.10

library
  exposed-modules:     Data.WorkQueue
                       Data.Streaming.NetworkMessage
                       Distributed.WorkQueue
                       Control.Concurrent.ThreadPool
  build-depends:       base
                     , async
                     , binary
                     , classy-prelude
                     , lifted-base
                     , monad-control
                     , stm
                     , streaming-commons
                     , text
                     , transformers-base
                     , vector-binary-instances
                     , void
                     , mono-traversable
                     , transformers
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall

executable hpc-example-war
  main-is:             best-deck.hs
  other-modules:       Data.War
  hs-source-dirs:      examples/war
  default-language:    Haskell2010
  build-depends:       base
                     , containers
                     , hybrid-vectors
                     , mwc-random
                     , primitive
                     , stm
                     , vector
                     , vector-algorithms
                     , work-queue
                     , mutable-containers
  ghc-options:         -Wall -threaded

test-suite test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  other-modules:       Data.WorkQueueSpec
                       Control.Concurrent.ThreadPoolSpec
  build-depends:       base
                     , work-queue
                     , hspec
                     , QuickCheck
                     , vector
                     , stm
                     , random
                     , streaming-commons
                     , async
                     , bytestring
                     , binary
  default-language:    Haskell2010
  ghc-options:         -Wall -threaded
