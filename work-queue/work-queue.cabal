name:                work-queue
version:             0.1.0.0
synopsis:            Local and distributed work queue implementation
description:         See README.md
homepage:            https://github.com/fpco/libraries
license:             AllRightsReserved
license-file:        LICENSE
author:              Michael Snoyman
maintainer:          michael@fpcomplete.com
copyright:           FP Complete
category:            Concurrency
build-type:          Custom
extra-source-files:  README.md
cabal-version:       >= 1.10

Flag coverage
    Description:       Run tests with code coverage.
    Default:           False

library
  exposed-modules:     Data.WorkQueue
                       Data.Streaming.NetworkMessage
                       Distributed.JobQueue
                       Distributed.JobQueue.Client
                       Distributed.JobQueue.Worker
                       Distributed.RedisQueue
                       Distributed.RedisQueue.Internal
                       Distributed.WorkQueue
                       Control.Concurrent.ThreadPool
                       Control.Exception.Mask
  other-modules:       Distributed.JobQueue.Shared
                       Distributed.JobQueue.Heartbeat
  build-depends:       base
                     , async
                     , binary
                     , classy-prelude
                     , lifted-base
                     , monad-control
                     , stm
                     , streaming-commons
                     , text
                     , transformers-base
                     , vector-binary-instances
                     , void
                     , mono-traversable
                     , transformers
                     , concrete-typerep
                     , bytestring
                     , redis-fp
                     , executable-hash
                     , stm-containers
                     , focus
                     , semigroups
                     , monad-logger
                     , cryptohash
                     , optparse-applicative >= 0.11
                     , text-binary
                     , uuid
                     , ghc-prim
                     , network
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall
  if flag(coverage)
      ghc-options:     -fhpc

executable hpc-example-factorial
  main-is:             factorial.hs
  hs-source-dirs:      examples/factorial
  default-language:    Haskell2010
  build-depends:       base
                     , stm
                     , work-queue
  ghc-options:         -Wall -threaded

executable hpc-example-war
  main-is:             best-deck.hs
  other-modules:       Data.War
  hs-source-dirs:      examples/war
  default-language:    Haskell2010
  build-depends:       base
                     , containers
                     , hybrid-vectors
                     , mwc-random
                     , primitive
                     , stm
                     , vector
                     , vector-algorithms
                     , work-queue
                     , mutable-containers
  ghc-options:         -Wall -threaded

executable hpc-example-redis
  main-is:             redis.hs
  hs-source-dirs:      examples/redis
  default-language:    Haskell2010
  build-depends:       base
                     , redis-fp
                     , work-queue
                     , binary
                     , split
                     , stm
                     , bytestring
                     , classy-prelude
                     , monad-logger
                     , transformers
                     , lifted-base
                     , unix
                     , semigroups
  ghc-options:         -Wall -threaded

test-suite test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Main.hs
  other-modules:       Data.WorkQueueSpec
                       Data.Streaming.NetworkMessageSpec
                       Distributed.WorkQueueSpec
                       Control.Concurrent.ThreadPoolSpec
  build-depends:       base
                     , work-queue
                     , hspec
                     , QuickCheck
                     , vector
                     , stm
                     , random
                     , streaming-commons
                     , async
                     , bytestring
                     , binary
                     , network
                     , enclosed-exceptions
                     , unix
                     , split
                     , classy-prelude
                     , system-fileio
                     , executable-path
                     , process
                     , silently
                     , monad-logger
                     , redis-fp
                     , lifted-base
                     , semigroups
                     , monad-control
                     , resourcet
  default-language:    Haskell2010
  ghc-options:         -Wall -threaded
  if flag(coverage)
      ghc-options:     -fhpc
      cpp-options:     -DCOVERAGE

benchmark bench
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test, bench
  main-is:             bench.hs
  other-modules:       Distributed.WorkQueueSpec
  build-depends:       base
                     , work-queue
                     , hspec
                     , QuickCheck
                     , vector
                     , stm
                     , random
                     , streaming-commons
                     , async
                     , bytestring
                     , binary
                     , network
                     , enclosed-exceptions
                     , unix
                     , split
                     , classy-prelude
                     , system-fileio
                     , executable-path
                     , process
                     , silently
                     , monad-logger
                     , redis-fp
                     , lifted-base
                     , semigroups
                     , monad-control
                     , resourcet
                     , criterion
  default-language:    Haskell2010
  ghc-options:         -Wall -threaded
  if flag(coverage)
      ghc-options:     -fhpc
      cpp-options:     -DCOVERAGE
